version: '3.3'
services:
  rabbitmq:
    image: "rabbitmq:management-alpine"
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_PASS=app
      - RABBITMQ_DEFAULT_USER=app
    networks:
      - backend
    healthcheck:
      timeout: 5s
      interval: 5s
      retries: 5
      test:
        - "CMD"
        - "rabbitmqctl"
        - "status"
  redis:
    image: "redis:alpine"
    container_name: redis
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    networks:
      - backend
    volumes:
      - "./db/redis/etc/redis.conf:/usr/local/etc/redis/redis.conf"
      - "./db/redis/data:/data"
    healthcheck:
      timeout: 5s
      interval: 5s
      retries: 5
      test:
        - "CMD"
        - "sh"
        - "-c"
        - "redis-cli -h 127.0.0.1 ping | grep PONG"
  pyconsumer:
    build: ./pyconsumer
    container_name: pyconsumer
    networks:
      - backend
    volumes:
      - "./log:/var/log"
    depends_on:
      - rabbitmq
      - redis
  pywebapi:
    build: ./pywebapi
    container_name: pywebapi
    ports:
      - "8182:80"
    networks:
      - backend
    volumes:
      - "./log:/var/log"
    depends_on:
      - rabbitmq
      - redis
    healthcheck:
      test: curl --fail -s http://localhost:80/ping || exit 1
      interval: 30s
      timeout: 5s
      retries: 3
  swagger-ui:
    image: "swaggerapi/swagger-ui"
    container_name: "swagger-ui"
    environment:
      - SWAGGER_JSON=/docs/swagger.yaml
    volumes:
      - "./swagger-ui:/docs"
    ports:
      - "8181:8080"
    networks:
      - backend
  jupyter-notebook:
    image: "jupyter/minimal-notebook"
    container_name: "jupyter-notebook"
    ports:
      - "8888:8888"
    networks:
      - backend
networks:
  backend:
