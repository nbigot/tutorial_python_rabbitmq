version: '3.3'
services:
  rabbitmq:
    image: "rabbitmq:management-alpine"
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - backend
  redis:
    image: "redis:alpine"
    container_name: redis
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    networks:
      - backend
    volumes:
      - "./db/redis/etc/redis.conf:/usr/local/etc/redis/redis.conf"
      - "./db/redis/data:/data"
  pyproducer:
    build: ./pyproducer
    networks:
      - backend
    volumes:
      - "./log:/var/log"
    depends_on:
      - rabbitmq
      - redis
  pyconsumer:
    build: ./pyconsumer
#    deploy:
#      replicas: 6
#      update_config:
#        parallelism: 2
#        delay: 10s
#      restart_policy:
#        condition: on-failure
    networks:
      - backend
    volumes:
      - "./log:/var/log"
    depends_on:
      - rabbitmq
      - redis
      - pyproducer
  pywebapi:
    build: ./pywebapi
    ports:
      - "8182:80"
    networks:
      - backend
    volumes:
      - "./log:/var/log"
    depends_on:
      - rabbitmq
      - redis
  swagger-ui:
    image: "swaggerapi/swagger-ui"
    container_name: "swagger-ui"
    environment:
      - SWAGGER_JSON=/docs/swagger.yaml
    volumes:
      - "./swagger-ui:/docs"
    ports:
      - "8181:8080"
    networks:
      - backend
  jupyter-notebook:
    build: ./jupyter-notebook
    container_name: "jupyter-notebook"
    ports:
      - "8888:8888"
    networks:
      - backend
networks:
  backend:
#    driver: custom-driver-1

